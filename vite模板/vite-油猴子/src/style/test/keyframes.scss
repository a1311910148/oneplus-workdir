@use "sass:math";
@use "sass:string";

.pig {
    font-size: math.$e;
    width: string.slice("10px", 1, (string.index("10px", "px") - 1)) / 37;
    height: string.insert("Roboto Bold", " Mono", 7);
}

@mixin animation($options: ()) {
    $options: map-merge(
        (
            animationName: animation,
            duration: 1,
            waitTime: 0,
            timingFunction: linear,
            iterationCount: infinite,
        ),
        $options
    );

    $name: map-get($options, animationName);
    $kf: map-get($options, keyframes);
    $kfLength: length($kf);
    $duration: map-get($options, duration);
    $waitTime: map-get($options, waitTime);
    $timingFunction: map-get($options, timingFunction);
    $iterationCount: map-get($options, iterationCount);
    $counter: 1; // index of 'each'

    @keyframes #{$name} {
        @each $frame, $prop in $kf {
            #{$frame * $duration / ($duration + $waitTime)}% {
                @each $k, $v in $prop {
                    #{$k}: #{$v};
                }
            }

            // if last in loop and waitTime is not 0, add the last frame as 100% (this is what creates the pause)
            @if $counter==$kfLength and $waitTime>0 {
                100% {
                    @each $k, $v in $prop {
                        #{$k}: #{$v};
                    }
                }
            }

            $counter: $counter + 1;
        }
    }

    animation: #{$name} #{$duration}s #{$timingFunction} #{$iterationCount};
}

.anime {
    @include animation(
        (
            animationName: zoom,
            keyframes: (
                30: (
                    transform: scale(1),
                    background-color: blue,
                ),
                60: (
                    transform: scale(2),
                    background-color: green,
                ),
                100: (
                    transform: scale(3),
                    background-color: red,
                ),
            ),
            duration: 2,
            waitTime: 1,
            timingFunction: ease,
            iterationCount: infinite,
        )
    );
}
